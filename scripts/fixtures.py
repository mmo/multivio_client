#!/usr/bin/env python

# -*- coding: utf-8 -*-

__author__ = "Johnny Mariethoz <Johnny.Mariethoz@rero.ch>"
__version__ = "0.0.0"
__copyright__ = "Copyright (c) 2009 Rero, Johnny Mariethoz"
__license__ = "Internal Use Only"


#---------------------------- Modules -----------------------------------------

# import of standard modules
import sys
import os
import urllib
from optparse import OptionParser

# third party modules


# local modules
SERVER = 'http://demo.multivio.org/server'
SERVER_VERSION = '/version'
URLS = {
        'metadata': '/server/metadata/get?url=',
        'logical' : '/server/structure/get_logical?url=',
        'physical':  '/server/structure/get_physical?url='
        }
import json


def clone_server_request(url_document, res_to_append):
    for url in URLS.values():
        url += url_document
        (tmp_file, header) = urllib.urlretrieve(SERVER + url)
        res_to_append[url] = json.load(file(tmp_file, 'r'), encoding='utf-8')
    if res_to_append[URLS['metadata'] + url_document]['mime'].endswith('xml'):
        for struct in res_to_append[URLS['physical'] + url_document]:
            clone_server_request(struct['url'], res_to_append)
#---------------------------- Main Part ---------------------------------------

if __name__ == '__main__':

    usage = "usage: %prog [options] <input_file> <output_file>"

    parser = OptionParser(usage)

    parser.set_description ("""Generate a Multivio client fixtures to replace the
true SERVER.
""")



    parser.add_option ("-v", "--verbose", dest="verbose",
                       help="Verbose mode",
                       action="store_true", default=False)


    (options,args) = parser.parse_args ()

    if len(args) != 2:
        parser.error("Error: incorrect number of arguments, try --help")
    output_file = file(args[1], 'w')
    res =  {}
    (tmp_file, header) = urllib.urlretrieve(SERVER + SERVER_VERSION)
    mime = header['Content-Type']
    res[SERVER_VERSION] =  json.load(file(tmp_file, 'r'))
    for line in file(args[0], 'r'):
        line = line.replace('\n', '')
        clone_server_request(line, res)
    output_file.write("//Generated by a python script.\n\n")
    output_file.write("Multivio.CDMFixtures = ")
    output_file.write(json.dumps(res, sort_keys=True, encoding='utf-8',
        indent=2))
    output_file.write(";")

